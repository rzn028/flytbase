[{"/home/rajan/projects/flytbase/flytbase-assignment/src/App.js":"1","/home/rajan/projects/flytbase/flytbase-assignment/src/components/Box.js":"2","/home/rajan/projects/flytbase/flytbase-assignment/src/constants/constants.js":"3"},{"size":3650,"mtime":1610824152219,"results":"4","hashOfConfig":"5"},{"size":533,"mtime":1610823886121,"results":"6","hashOfConfig":"5"},{"size":601,"mtime":1610823464581,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"1j1qcw8",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rajan/projects/flytbase/flytbase-assignment/src/App.js",["15","16"],"import './styles/App.css';\nimport React, { useEffect, useState } from 'react';\nimport Box from './components/Box';\nimport { directions, colors } from './constants/constants';\n\nconst App = () => {\n\tconst [ zIndex, setZIndex ] = useState(1);\n\tconst [ boxes, setBoxes ] = useState([]);\n\tconst [ selectedBox, setSelectedBox ] = useState();\n\n\tconst handleBoxClick = (boxId) => {\n\t\tsetSelectedBox(boxId);\n\t};\n\n\tconst addNewBox = () => {\n\t\tconst color = colors[Math.floor(Math.random() * 9)];\n\t\tconst box = {\n\t\t\tid: zIndex,\n\t\t\tmarginLeft: 100,\n\t\t\tmarginTop: 100,\n\t\t\tzIndex: zIndex,\n\t\t\tbgColor: color.bgColor,\n\t\t\tborderColor: color.borderColor\n\t\t};\n\t\tsetZIndex((old) => old + 1);\n\t\tsetBoxes((old) => [ ...old, box ]);\n\t};\n\n\tconst handleKeyPressEvent = (event) => {\n\t\tconst boxId = selectedBox;\n\t\tif (!boxId) {\n\t\t\treturn;\n\t\t}\n\t\tconst key = event.key.toLowerCase();\n\t\tswitch (key) {\n\t\t\tcase 'w':\n\t\t\t\tmoveObject(boxId, directions.UP);\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tmoveObject(boxId, directions.DOWN);\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tmoveObject(boxId, directions.LEFT);\n\t\t\t\tbreak;\n\t\t\tcase 'd':\n\t\t\t\tmoveObject(boxId, directions.RIGHT);\n\t\t\t\tbreak;\n\t\t\tcase 'delete':\n\t\t\t\tsetBoxes((boxes) => boxes.filter((box) => box.id !== boxId));\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst moveObject = (boxId, direction) => {\n\t\tswitch (direction) {\n\t\t\tcase directions.UP:\n\t\t\t\tsetBoxes((boxes) =>\n\t\t\t\t\tboxes.map((box) => {\n\t\t\t\t\t\tif (box.id === boxId) {\n\t\t\t\t\t\t\tconst marginTop = box.marginTop - 2 > 0 ? box.marginTop - 2 : 0;\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...box,\n\t\t\t\t\t\t\t\tmarginTop\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { ...box };\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tcase directions.DOWN:\n\t\t\t\tsetBoxes((boxes) =>\n\t\t\t\t\tboxes.map((box) => {\n\t\t\t\t\t\tif (box.id === boxId) {\n\t\t\t\t\t\t\tconst marginTop =\n\t\t\t\t\t\t\t\tbox.marginTop + 2 < window.innerHeight - 300\n\t\t\t\t\t\t\t\t\t? box.marginTop + 2\n\t\t\t\t\t\t\t\t\t: window.innerHeight - 300;\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...box,\n\t\t\t\t\t\t\t\tmarginTop: marginTop\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { ...box };\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tcase directions.LEFT:\n\t\t\t\tsetBoxes((boxes) =>\n\t\t\t\t\tboxes.map((box) => {\n\t\t\t\t\t\tif (box.id === boxId) {\n\t\t\t\t\t\t\tconst marginLeft = box.marginLeft - 2 > 0 ? box.marginLeft - 2 : 0;\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...box,\n\t\t\t\t\t\t\t\tmarginLeft\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { ...box };\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tcase directions.RIGHT:\n\t\t\t\tsetBoxes((boxes) =>\n\t\t\t\t\tboxes.map((box) => {\n\t\t\t\t\t\tif (box.id === boxId) {\n\t\t\t\t\t\t\tconst marginLeft =\n\t\t\t\t\t\t\t\tbox.marginLeft + 2 < window.innerWidth - 400\n\t\t\t\t\t\t\t\t\t? box.marginLeft + 2\n\t\t\t\t\t\t\t\t\t: window.innerWidth - 400;\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...box,\n\t\t\t\t\t\t\t\tmarginLeft\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { ...box };\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tuseEffect(\n\t\t() => {\n\t\t\tdocument.addEventListener('keypress', handleKeyPressEvent);\n\t\t\treturn () => {\n\t\t\t\tdocument.removeEventListener('keypress', handleKeyPressEvent);\n\t\t\t};\n\t\t},\n\t\t[ selectedBox ]\n\t);\n\n\treturn (\n\t\t<div className=\"App\" style={{ height: '100vh', width: '100%' }}>\n\t\t\t<div>\n\t\t\t\t<button onClick={addNewBox} className=\"add-button\">\n\t\t\t\t\tAdd box\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: `${window.innerWidth - 300}px`,\n\t\t\t\t\theight: `${window.innerHeight - 200}px`\n\t\t\t\t}}\n\t\t\t\tclassName=\"box-area\"\n\t\t\t>\n\t\t\t\t{boxes.map((item) => {\n\t\t\t\t\tif (!item) return '';\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\tid={item.id}\n\t\t\t\t\t\t\tzIndex={item.zIndex}\n\t\t\t\t\t\t\tmarginLeft={item.marginLeft}\n\t\t\t\t\t\t\tmarginTop={item.marginTop}\n\t\t\t\t\t\t\thandleBoxClick={handleBoxClick}\n\t\t\t\t\t\t\tselectedBox={selectedBox}\n\t\t\t\t\t\t\tbgColor={item.bgColor}\n\t\t\t\t\t\t\tborderColor={item.borderColor}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","/home/rajan/projects/flytbase/flytbase-assignment/src/components/Box.js",[],"/home/rajan/projects/flytbase/flytbase-assignment/src/constants/constants.js",[],{"ruleId":"17","severity":1,"message":"18","line":50,"column":4,"nodeType":"19","messageId":"20","endLine":51,"endColumn":11},{"ruleId":"21","severity":1,"message":"22","line":134,"column":3,"nodeType":"23","endLine":134,"endColumn":18,"suggestions":"24"},"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleKeyPressEvent'. Either include it or remove the dependency array.","ArrayExpression",["25"],{"desc":"26","fix":"27"},"Update the dependencies array to be: [handleKeyPressEvent, selectedBox]",{"range":"28","text":"29"},[2873,2888],"[handleKeyPressEvent, selectedBox]"]